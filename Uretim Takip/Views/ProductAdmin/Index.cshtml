@using EntityLayer.Concrete
@using Uretim_Takip.Dtos
@using System.ComponentModel
@using Newtonsoft.Json
@model ProductsViewModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}
<h1>Ürün Listesi</h1>

@await Html.PartialAsync("_ScriptImports")


<div class="card">
    <div class="card-header">
        <h3 class="card-title">
            <i class="fas fa-cubes"></i>
            Ürünler
        </h3>
    </div>
    <div class="card-body">
        <button class="btn btn-primary" onclick="openYeniUrunModal()">Yeni Ürün</button>
        <br />

        <div id="productTable" class="table-responsive">
            <table id="productGrid" class="table table-bordered table-striped"></table>
            <div id="productGridPager"></div>
        </div>

    </div>

</div>

<script>
    var firstModal = null;

    $(document).ready(function () {
        takeProductData();
    });

    function categoryFormatter(cellValue, options, rowObject) {
        return rowObject.category && rowObject.category.name ? rowObject.category.name : '';
    }

    function companyFormatter(cellValue, options, rowObject) {
        return rowObject.company && rowObject.company.name ? rowObject.company.name : '';
    }


    function takeProductData() {
        var productGrid = $('#productGrid');

            $.ajax({
                url: '/ProductAdmin/GetProductData',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    var data = response.$values;
                    console.log(data);

                    showDatas(data);

                },
                error: function (error) {
                    console.log(error);
                }
            });
    }

    function showDatas(data) {
        var productGrid = $('#productGrid');

        if (productGrid.length) {
            productGrid.jqGrid('GridUnload');

            productGrid.jqGrid({
                data: data,
                colModel: [
                    { name: 'id', label: 'ID', width: 40 },
                    { name: 'category', label: 'Kategori', width: 100, formatter: categoryFormatter },
                    { name: 'company', label: 'Firma', width: 100, formatter: companyFormatter },
                    { name: 'name', label: 'Ürün Adı', width: 110 },
                    { name: 'material', label: 'Malzeme', width: 80 },
                    { name: 'price', label: 'Fiyat', width: 80 },
                    { name: 'piece', label: 'Adet', width: 80 },
                    {
                        name: 'status', label: 'Durum', width: 100,
                        formatter: function (cellValue) {
                            switch (cellValue) {
                                case 1:
                                    return 'SATIŞTA';
                                case 2:
                                    return 'KALDIRILDI';
                                case 3:
                                    return 'ONAY BEKLİYOR';
                                default:
                                    return '';
                            }
                        }
                    },
                    { name: 'description', label: 'Açıklama', width: 100 },
                    {
                        name: 'actions', label: '', width: 200,
                        formatter: function (cellValue, options, rowObject) {
                            var buttons = '<button class="btn btn-primary open-edit-modal" ' +
                                'data-productid="' + rowObject.id + '" ' +
                                'data-productname="' + rowObject.name + '" ' +
                                'data-productmaterial="' + rowObject.material + '" ' +
                                'data-productprice="' + rowObject.price + '" ' +
                                'data-productpiece="' + rowObject.piece + '" ' +
                                'data-productdescription="' + rowObject.description + '" ' +
                                'data-productstatus="' + rowObject.status + '" ' +
                                'data-productcategory="' + (rowObject.category && rowObject.category.name ? rowObject.category.name : '') + '" ' +
                                'data-productcompany="' + (rowObject.company && rowObject.company.name ? rowObject.company.name : '') + '">Düzenle</button>' +
                                '<button class="btn btn-success open-approve-modal" ' +
                                'data-productid="' + rowObject.id + '" ' +
                                'data-productstatus="' + rowObject.status + '">Onayla</button>' +
                                '<button class="btn btn-warning open-delete-modal" ' +
                                'data-productid="' + rowObject.id + '" ' +
                                'data-productstatus="' + rowObject.status + '">Kaldır</button>';
                            return buttons;
                        }
                    }
                ],
                pager: '#productGridPager',
                rowNum: 10,
                rowList: [10, 20, 30, 40, 50],
                sortname: 'id',
                viewrecords: true,
                autoheight: true,
                autoWidth: true,
                responsive: true
            });
        }
    }


    function openDeleteUrunModal(button) {
        var data = button.dataset;

        firstModal = $.dialog({
        title: 'Ürün Kaldır',
        content: `
        <!-- ${JSON.stringify(data)} -->
        <form method="post" action="@Url.Action("DeleteProduct", "ProductAdmin")">

            <div class="form-group">
                <label>Kaldırmak istiyor musunuz ?</label>
            </div>

            <div class="form-group">
                <input type="text" id="ID" name="ID" class="form-control" value="${data.productid}" required hidden />

            </div>

            <div class="form-group">
                <select id="Status" name="Status" class="form-control" data="${data.productstatus}" required hidden>
                    <option value="1" ${data.productstatus =='Approved' ? 'selected' : '' }>SATIŞTA</option>
                    <option value="2" ${data.productstatus =='Removed' ? 'selected' : '' }>KALDIRILDI</option>
                </select>
            </div>

            <div class="form-group">
                <input type="submit" value="Kaldır" class="btn btn-warning w-100" />
            </div>

        </form>
        `
        });
        }

    function openApproveUrunModal(button) {
        var data = button.dataset;
        firstModal = $.dialog({
        title: 'Ürün Onayla',
        content: `
        <!-- ${JSON.stringify(data)} -->
        <form method="post" action="@Url.Action("ApproveProduct", "ProductAdmin")">

            <div class="form-group">
                <label>Onaylamak istiyor musunuz ?</label>
            </div>

            <div class="form-group">
                <input type="text" id="ID" name="ID" class="form-control" value="${data.productid}" required hidden />

            </div>

            <div class="form-group">
                <select id="Status" name="Status" class="form-control" data="${data.productstatus}" required hidden>
                    <option value="1" ${data.productstatus == 'Approved' ? 'selected' : '' }>SATIŞTA</option>
                    <option value="2" ${data.productstatus == 'Removed' ? 'selected' : '' }>KALDIRILDI</option>
                </select>
            </div>

            <div class="form-group">
                <input type="submit" value="Onayla" class="btn btn-primary w-100" />
            </div>

        </form>
        `
        });
        }

    function openEditUrunModal(button) {
        var data = button.dataset;
        var companyOptions = @Html.Raw(JsonConvert.SerializeObject(Model.FilterDto.Companies));
        var categoryOptions = @Html.Raw(JsonConvert.SerializeObject(Model.FilterDto.Categories));
        console.log(data);
        firstModal = $.dialog({
        title: 'Ürün Düzenle',
        content: `
        <form method="post" action="@Url.Action("EditProduct", "ProductAdmin")">

            <div class="form-group">
                <input type="text" id="ID" name="ID" class="form-control" value="${data.productid}" required hidden />

            </div>

            <div class="form-group">
                <label for="Name">Ürün Adı</label>
                <input type="text" id="Name" name="Name" class="form-control" value="${data.productname}" required />
            </div>

            <div class="form-group">
                <label for="Material">Malzeme</label>
                <input type="text" id="Material" name="Material" class="form-control" value="${data.productmaterial}" required />
            </div>

            <div class="form-group">
                <label for="Price">Fiyat</label>
                <input type="number" id="Price" name="Price" class="form-control" step="0.01" value="${data.productprice.replace(",", "." )}" required />
            </div>

            <div class="form-group">
                <label for="Piece">Adet : </label>
                <input type="number" id="Piece" name="Piece" class="form-control" step="0.01" value="${data.productpiece.replace(",", "." )}" required />
            </div>

            <div class="form-group">
                <label for="Status">Durum :</label>
                <select id="Status" name="Status" class="form-control" data="${data.productstatus}" required>
                    <option value="1" ${data.productstatus == '1' ? 'selected' : '' }>SATIŞTA</option>
                    <option value="2" ${data.productstatus == '2' ? 'selected' : '' }>KALDIRILDI</option>
                    <option value="3" ${data.productstatus == '3' ? 'selected' : '' }>ONAY BEKLİYOR</option>
                </select>
            </div>

            <div class="form-group">
                <label for="Description">Açıklama :</label>
                <textarea id="Description" name="Description" class="form-control" rows="3">${data.productdescription}</textarea>
            </div>

            <div class="form-group">
                <label for="CategoryName">Kategori :</label>
                <select id="CategoryName" name="CategoryName" class="form-control">
                    ${categoryOptions.map(category => `
                    <option value="${category}" } ${data.productcategory == category ? 'selected' : '' }>${category}</option>`).join('')}
                </select>
            </div>

            <div class="form-group">
                <label for="CompanyName">Firma :</label>
                <select id="CompanyName" name="CompanyName" class="form-control">
                    ${companyOptions.map(company => `
                    <option value="${company}" ${company == data.productcompany ? 'selected' : '' }>${company}</option>`).join('')}
                </select>
            </div>

            <div class="form-group">
                <input type="submit" value="Düzenle" class="btn btn-primary w-100" />
            </div>

        </form>
        `
        });
        }

    function openYeniUrunModal() {
        firstModal = $.dialog({
        title: 'Ürün Oluştur',
        content: `
        <form method="post" action="@Url.Action("AddProduct", "ProductAdmin")">
            <div class="form-group">
                <label for="Name">Ürün Adı</label>
                <input type="text" id="Name" name="Name" class="form-control" required />
            </div>

            <div class="form-group">
                <label for="Material">Malzeme</label>
                <input type="text" id="Material" name="Material" class="form-control" required />
            </div>

            <div class="form-group">
                <label for="Price">Fiyat</label>
                <input type="number" id="Price" name="Price" class="form-control" step="0.01" required />
            </div>

            <div class="form-group">
                <label for="Piece">Adet : </label>
                <input type="number" id="Piece" name="Piece" class="form-control" step="0.01" required />
            </div>

            <div class="form-group">
                <label for="Status">Durum :</label>
                <select id="Status" name="Status" class="form-control" required>
                    <option value="1">SATIŞTA</option>
                    <option value="2">KALDIRILDI</option>
                    <option value="3">ONAY BEKLİYOR</option>
                </select>
            </div>

            <div class="form-group">
                <label for="Description">Açıklama :</label>
                <textarea id="Description" name="Description" class="form-control" rows="3"></textarea>
            </div>

            <div class="form-group">
                <label for="CategoryName">Kategori :</label>
                <select id="CategoryName" name="CategoryName" class="form-control" required>
                    @foreach (var category in Model.FilterDto.Categories)
                    {
                        <option value="@category">@category</option>
                    }
                </select>
            </div>

            <div class="form-group">
                <label for="CompanyName">Firma :</label>
                <select id="CompanyName" name="CompanyName" class="form-control" required>
                    @foreach (var company in Model.FilterDto.Companies)
                    {
                        <option value="@company">@company</option>
                    }
                </select>
            </div>

            <div class="form-group">
                <input type="submit" value="Oluştur" class="btn btn-primary w-100" />
            </div>

        </form>

    `
    });

    }



    //DEĞİŞECEK
    function DEGISECEKopenYeniUrunModal() {
        firstModal = $.dialog({
            title: 'Ürün Oluştur',
            content: `
                <form method="post" action="@Url.Action("AddProduct", "ProductAdmin")">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FilterDto.Name, "Ürün Adı")
                        @Html.TextBoxFor(model => model.FilterDto.Name, new { @class = "form-control", required = "required" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FilterDto.Material, "Malzeme")
                        @Html.TextBoxFor(model => model.FilterDto.Material, new { @class = "form-control", required = "required" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FilterDto.Price, "Fiyat")
                        @Html.TextBoxFor(model => model.FilterDto.Price, new { @class = "form-control", type = "number", step = "0.01", required = "required" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FilterDto.Piece, "Adet")
                        @Html.TextBoxFor(model => model.FilterDto.Piece, new { @class = "form-control", type = "number", step = "0.01", required = "required" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FilterDto.Status, "Durum")
                        @Html.DropDownListFor(model => model.FilterDto.Status, new List<SelectListItem>
                        {
                            new SelectListItem { Text = "SATIŞTA", Value = "1" },
                            new SelectListItem { Text = "KALDIRILDI", Value = "2" },
                            new SelectListItem { Text = "ONAY BEKLİYOR", Value = "3" }
                        }, "Seçiniz", new { @class = "form-control", required = "required" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FilterDto.Description, "Açıklama")
                        @Html.TextAreaFor(model => model.FilterDto.Description, new { @class = "form-control", rows = "3" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FilterDto.CategoryName, "Kategori")
                        @Html.DropDownListFor(model => model.FilterDto.CategoryName, new SelectList(Model.FilterDto.Categories), "Seçiniz", new { @class = "form-control", required = "required" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FilterDto.CompanyName, "Firma")
                        @Html.DropDownListFor(model => model.FilterDto.CompanyName, new SelectList(Model.FilterDto.Companies), "Seçiniz", new { @class = "form-control", required = "required" })
                    </div>

                    <div class="form-group">
                        <input type="submit" value="Oluştur" class="btn btn-primary w-100" />
                    </div>
                </form>
            `
        });
    }


    $(document).on('click', '.open-delete-modal', function () {
        openDeleteUrunModal(this);
    });

    $(document).on('click', '.open-approve-modal', function () {
        openApproveUrunModal(this);
    });

    $(document).on('click', '.open-edit-modal', function () {
        openEditUrunModal(this);
    });

    $(document).on('click', '#yeniUrunButton', function () {
        openYeniUrunModal();
    });

    $(document).on('submit', 'form', function (e) {
        e.preventDefault();
        var form = $(this);

        $.ajax({
            url: form.attr('action'),
            type: form.attr('method'),
            data: form.serialize(),
            success: function (response) {
                var message = response;
                mesajDialog = $.dialog({
                    title: 'İşlem Sonucu',
                    content: message,
                    closeButton: false
                });
                setTimeout(function () {
                    mesajDialog.close();
                    if (firstModal) {
                        firstModal.close();
                    }
                    takeProductData();
                }, 1500);
            },
            error: function (error) {
                alert("Başarısız");
            }
        });
    });


</script>


